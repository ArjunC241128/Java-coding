import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class Main {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Swing Example");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1005, 500);
        frame.setLocationRelativeTo(null);

        JLabel label = new JLabel("Enter two numbers and click 'Add'");
        JTextField number1Field = new JTextField(10);
        JTextField number2Field = new JTextField(10);

        JButton addButton = new JButton("Add");
        JButton MinusButton = new JButton("Minus");
        JButton MultiButton = new JButton("Multiplication");
        JButton DivButton = new JButton("Division");
        JButton ModButton = new JButton("Modulus");


        JLabel resultLabel = new JLabel("Result: ");


        applyButtonHoverEffect(addButton, Color.GREEN);
        applyButtonHoverEffect(MinusButton, Color.RED);
        applyButtonHoverEffect(MultiButton, Color.ORANGE);
        applyButtonHoverEffect(DivButton, Color.CYAN);
        applyButtonHoverEffect(ModButton, Color.MAGENTA);


        addButton.addActionListener(e -> {
            try {
                double num1 = Double.parseDouble(number1Field.getText());
                double num2 = Double.parseDouble(number2Field.getText());
                double sum = num1 + num2;
                resultLabel.setText("Result: " + sum);
            } catch (NumberFormatException ex) {
                resultLabel.setText("Invalid input! Please enter valid numbers.");
            }
        });

        MinusButton.addActionListener(e -> {
            try {
                double num1 = Double.parseDouble(number1Field.getText());
                double num2 = Double.parseDouble(number2Field.getText());
                double sub = num1 - num2;
                resultLabel.setText("Result: " + sub);
            } catch (NumberFormatException ex) {
                resultLabel.setText("Invalid input! Please enter valid numbers.");
            }
        });

        MultiButton.addActionListener(e -> {
            try {
                double num1 = Double.parseDouble(number1Field.getText());
                double num2 = Double.parseDouble(number2Field.getText());
                double mul = num1 * num2;
                resultLabel.setText("Result: " + mul);
            } catch (NumberFormatException ex) {
                resultLabel.setText("Invalid input! Please enter valid numbers.");
            }
        });

        DivButton.addActionListener(e -> {
            try {
                double num1 = Double.parseDouble(number1Field.getText());
                double num2 = Double.parseDouble(number2Field.getText());
                if (num2 == 0) {
                    resultLabel.setText("Cannot divide by zero!");
                } else {
                    double div = num1 / num2;
                    resultLabel.setText("Result: " + div);
                }
            } catch (NumberFormatException ex) {
                resultLabel.setText("Invalid input! Please enter valid numbers.");
            }
        });

        ModButton.addActionListener(e -> {
            try {
                double num1 = Double.parseDouble(number1Field.getText());
                double num2 = Double.parseDouble(number2Field.getText());
                if (num2 == 0) {
                    resultLabel.setText("Cannot perform modulus with zero!");
                } else {
                    double mod = num1 % num2;
                    resultLabel.setText("Result: " + mod);
                }
            } catch (NumberFormatException ex) {
                resultLabel.setText("Invalid input! Please enter valid numbers.");
            }
        });


        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout());
        panel.add(label);
        panel.add(new JLabel("Number 1:"));
        panel.add(number1Field);
        panel.add(new JLabel("Number 2:"));
        panel.add(number2Field);
        panel.add(addButton);
        panel.add(MinusButton);
        panel.add(MultiButton);
        panel.add(DivButton);
        panel.add(ModButton);
        panel.add(resultLabel);


        frame.add(panel);


        frame.setVisible(true);
    }


    public static void applyButtonHoverEffect(JButton button, Color hoverColor) {
        Color originalColor = button.getBackground();
        button.setFocusPainted(false);
        button.setContentAreaFilled(true);
        button.setOpaque(true);
        button.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                button.setBackground(hoverColor.darker());
            }

            public void mouseExited(MouseEvent e) {
                button.setBackground(originalColor);
            }

            public void mousePressed(MouseEvent e) {
                button.setBackground(hoverColor);
            }

            public void mouseReleased(MouseEvent e) {
                button.setBackground(hoverColor.darker());
            }
        });
    }
}
